{"remainingRequest":"C:\\Users\\感觉\\Desktop\\new-bee\\new-bee\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\感觉\\Desktop\\new-bee\\new-bee\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!C:\\Users\\感觉\\Desktop\\new-bee\\new-bee\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\感觉\\Desktop\\new-bee\\new-bee\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\感觉\\Desktop\\new-bee\\new-bee\\src\\components\\VueImgVerify.vue?vue&type=template&id=2c10b734","dependencies":[{"path":"C:\\Users\\感觉\\Desktop\\new-bee\\new-bee\\src\\components\\VueImgVerify.vue","mtime":1610352472000},{"path":"C:\\Users\\感觉\\Desktop\\new-bee\\new-bee\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\感觉\\Desktop\\new-bee\\new-bee\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\感觉\\Desktop\\new-bee\\new-bee\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\感觉\\Desktop\\new-bee\\new-bee\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\感觉\\Desktop\\new-bee\\new-bee\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlQmxvY2sgYXMgX2NyZWF0ZUJsb2NrIH0gZnJvbSAidnVlIjsKdmFyIF9ob2lzdGVkXzEgPSB7CiAgY2xhc3M6ICJpbWctdmVyaWZ5Igp9OwpleHBvcnQgZnVuY3Rpb24gcmVuZGVyKF9jdHgsIF9jYWNoZSwgJHByb3BzLCAkc2V0dXAsICRkYXRhLCAkb3B0aW9ucykgewogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jaygiZGl2IiwgX2hvaXN0ZWRfMSwgW19jcmVhdGVWTm9kZSgiY2FudmFzIiwgewogICAgcmVmOiAidmVyaWZ5IiwKICAgIHdpZHRoOiBfY3R4LndpZHRoLAogICAgaGVpZ2h0OiBfY3R4LmhlaWdodCwKICAgIG9uQ2xpY2s6IF9jYWNoZVsxXSB8fCAoX2NhY2hlWzFdID0gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gJHNldHVwLmhhbmRsZURyYXcgJiYgJHNldHVwLmhhbmRsZURyYXcuYXBwbHkoJHNldHVwLCBhcmd1bWVudHMpOwogICAgfSkKICB9LCBudWxsLCA4CiAgLyogUFJPUFMgKi8KICAsIFsid2lkdGgiLCAiaGVpZ2h0Il0pXSk7Cn0="},{"version":3,"sources":["C:\\Users\\感觉\\Desktop\\new-bee\\new-bee\\src\\components\\VueImgVerify.vue"],"names":[],"mappings":";;AACO,EAAA,KAAK,EAAC;;;uBAAX,YAAA,CAEM,KAFN,EAAA,UAAA,EAEM,CADJ,YAAA,CAAkF,QAAlF,EAAkF;AAA1E,IAAA,GAAG,EAAC,QAAsE;AAA5D,IAAA,KAAK,EAAE,IAAA,CAAA,KAAqD;AAA7C,IAAA,MAAM,EAAE,IAAA,CAAA,MAAqC;AAA5B,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,MAAA,CAAA,UAAA,IAAA,MAAA,CAAA,UAAA,OAAA,MAAA,YAAF;AAAA,KAAA;AAAuB,GAAlF,E,IAAA,E;;AAAA,I,mBAAA,CACI,CAFN,C","sourcesContent":["<template>\n  <div class=\"img-verify\">\n    <canvas ref=\"verify\" :width=\"width\" :height=\"height\" @click=\"handleDraw\"></canvas>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, onMounted, toRefs } from 'vue'\nexport default {\n  setup() {\n    const verify = ref(null)\n    const state = reactive({\n      pool: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890',\n      width: 120,\n      height: 40,\n      imgCode: ''\n    })\n    onMounted(() => {\n      state.imgCode = draw()\n    })\n    // 随机数\n    const randomNum = (min, max) => {\n      return parseInt(Math.random() * (max - min) + min)\n    }\n    // 生成随即色\n    const randomColor = (min, max) => {\n      const r = randomNum(min, max)\n      const g = randomNum(min, max)\n      const b = randomNum(min, max)\n      return `rgb(${r}, ${g}, ${b})`\n    }\n    // 绘制图片\n    const draw = () => {\n      // 拿到画布\n      const ctx = verify.value.getContext('2d')\n      // 填充背景色\n      ctx.fillStyle = randomColor(180, 230)\n      // 填充的位置\n      ctx.fillRect(0, 0, state.width, state.height)\n      // 定义内容\n      let imgCode = ''\n      // 随机生成字符串\n      for (let i = 0; i < 4; i++) {\n        const text = state.pool[randomNum(0, state.pool.length)]\n        imgCode += text\n        // 随机字体大小\n        const fontSize = randomNum(18, 40)\n        // 字体随机旋转角度\n        const deg = randomNum(-30, 30)\n        ctx.font = fontSize +  'px Simhei'\n        ctx.textBaseline = 'top'\n        ctx.fillStyle = randomColor(80, 150)\n        ctx.save() // 保存，入栈\n        ctx.translate(30 * i + 15, 15)\n        ctx.rotate((deg * Math.PI) / 180)\n        // 文字绘制到画布上\n        ctx.fillText(text, -10, -15)\n        ctx.restore() // 恢复原来的值，出栈\n      }\n      // 随机生成5条干扰线条\n      for (let i = 0; i < 5; i++) {\n        ctx.beginPath()\n        ctx.moveTo(randomNum(0, state.width), randomNum(0, state.height))\n        ctx.lineTo(randomNum(0, state.width), randomNum(0, state.height))\n        ctx.strokeStyle = randomColor(180, 230)\n        ctx.closePath()\n        ctx.stroke()\n      }\n      // 随机产生40个干扰的小点\n      for (let i = 0; i < 40; i++) {\n        ctx.beginPath()\n        ctx.arc(randomNum(0, state.width), randomNum(0, state.height), 1, 0, 2 * Math.PI)\n        ctx.closePath()\n        ctx.fillStyle = randomColor(150, 200)\n        ctx.fill()\n      }\n      return imgCode\n    }\n\n    const handleDraw = () => {\n      state.imgCode = draw()\n    }\n    return {\n      ...toRefs(state),\n      verify,\n      handleDraw\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>"],"sourceRoot":""}]}